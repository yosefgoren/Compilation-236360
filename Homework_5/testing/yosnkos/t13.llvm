declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}
define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}
define void@foo(i32, i32){
%sp = alloca [50 x i32]
br label %statement_3
statement_3:
%reg1 = add i32 0, %0
call void(i32) @printi(i32 %reg1)
br label %statement_7
statement_7:
%reg2 = add i32 0, %1
call void(i32) @printi(i32 %reg2)
br label %func_end_12
br label %func_end_12
func_end_12:
ret void
}
define void@main(){
%sp = alloca [50 x i32]
br label %statement_18
statement_18:
call void(i32, i32) @foo(i32  9, i32  11)
br label %func_end_22
br label %func_end_22
func_end_22:
ret void
}
