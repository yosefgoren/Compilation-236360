declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}
define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}
define i32 @main(){
%sp = alloca [50 x i32]
%reg1 = add i32 0, 3
%reg2 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
store i32 %reg1, i32* %reg2
br label %parse_label_6
parse_label_6:
br label %parse_label_8
parse_label_8:
%param_ptr3 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw4 = load i32, i32* %param_ptr3
%reg5 = %param_raw4
%reg6 = add i32 0, 0
%reg7 = icmp sge i32 %reg5, %reg6
br i1 %reg7, label %parse_label_16, label %parse_label_31
br label %parse_label_16
parse_label_16:
%param_ptr8 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw9 = load i32, i32* %param_ptr8
%reg10 = %param_raw9
call void(i32) @printi(i32%reg10)
br label %parse_label_22
parse_label_22:
%param_ptr11 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw12 = load i32, i32* %param_ptr11
%reg13 = %param_raw12
%reg14 = add i32 0, 1
%reg15 = sub i32 %reg13, %reg14
%reg16 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
store i32 %reg15, i32* %reg16
br label %parse_label_31
parse_label_31:
%reg17 = add i32 0, 9002
call void(i32) @printi(i32%reg17)
ret i32 0
}
