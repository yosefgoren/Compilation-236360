declare i32 @printf(i8*, ...)
declare void @exit(i32)
@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"
define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}
define void @print(i8*) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i8* %0)
    ret void
}
define void@main(){
%sp = alloca [50 x i32]
br label %statement_3
statement_3:
%raw_reg1 = zext i8  8 to i32
%reg2 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
store i32 %raw_reg1, i32* %reg2
br label %statement_8
statement_8:
%param_ptr3 = getelementptr [50 x i32], [50 x i32]* %sp, i32 0, i32 0
%param_raw4 = load i32, i32* %param_ptr3
%truncated_byte5 = trunc i32 %param_raw4 to i8
%reg6 = add i8 0, %truncated_byte5
%raw_reg7 = zext i8 %reg6 to i32
call void(i32) @printi(i32 %raw_reg7)
br label %statement_16
statement_16:
ret void
br label %func_end_19
func_end_19:
ret void
}
