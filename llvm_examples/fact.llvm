@str = internal constant [14 x i8] c"hello, world\0A\00"

declare i32 @printf(i8*, ...)

@.int_specifier = constant [4 x i8] c"%d\0A\00"
@.str_specifier = constant [4 x i8] c"%s\0A\00"

define void @printi(i32) {
    %spec_ptr = getelementptr [4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0
    call i32 (i8*, ...) @printf(i8* %spec_ptr, i32 %0)
    ret void
}

define i32 @fact(i32){
	fact_entry:
		%ptr1 = alloca i32
		%ptr2 = alloca i32
		store i32 %0, i32* %ptr2
		store i32 %0, i32* %ptr1
		%tmp1 = load i32, i32* %ptr1
		%1 = icmp sle i32 1, %tmp1
		br i1 %1, label %fact_step, label %fact_done
	fact_done:
		ret i32 1
	fact_step:
		%tmp2 = load i32, i32* %ptr1
		%samller = sub i32 %tmp2, 1
		%returned = call i32 (i32) @fact(i32 %samller)
		
		%ptr3 = getelementptr i32, i32* %ptr1, i32 1
		%tmp3 = load i32, i32* %ptr3
		%multiplication = mul i32 %tmp3, %returned
		ret i32 %multiplication
}

define i32 @main(){
	%1 = add i32 4, 0
	%2 = call i32 (i32) @fact(i32 %1)
	call void (i32) @printi(i32 %2)
	ret i32 0
}